const int N = 1e5 + 10;

int dfn[N], low[N];
int dfs_id = 0;
vector<vector<int>> ans;

memset(dfn, 0, n * sizeof(int));
memset(low, 0, n * sizeof(int));
vector<vector<int>> g(n);
for (auto& x : c) {
    g[x[0]].push_back(x[1]);
    g[x[1]].push_back(x[0]);
}
tarjan(g, 0, -1);

void tarjan(vector<vector<int>>& g, int u, int p) {
    if (dfn[u] != 0) return ;
    dfn[u] = low[u] = ++dfs_id;
    for (auto& v : g[u]) {
        if (v == p) continue;
        if (!dfn[v]) {
            tarjan(g, v, u);
            low[u] = min(low[u], low[v]);
            if (low[v] > dfn[u]) ans.push_back({u, v});
        }
        else low[u] = min(low[u], dfn[v]);
    }
}
